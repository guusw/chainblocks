name: CI
on: [push, workflow_dispatch]
jobs:
  emscripten:
    strategy:
      fail-fast: false
      matrix:
        include:
          - with_pthreads: ON
            suffix: mt
          - with_pthreads: OFF
            suffix: st
    runs-on: ubuntu-20.04
    env:
      EMSCRIPTEN_PTHREADS: ${{matrix.with_pthreads}}
      EMSDK: "/emsdk"
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup
      run: |
        set -x
        sudo bash scripts/emscripten/install_packages
        sudo EMSDK=$EMSDK bash scripts/emscripten/install_emsdk
        sudo bash scripts/emscripten/install_boost
        bash scripts/emscripten/install_rust
    - name: Configure
      run: bash scripts/emscripten/configure
    - name: Build
      run: bash scripts/emscripten/build
    - name: Test
      env:
        EMSCRIPTEN_SUFFIX: ${{matrix.suffix}}
      run: bash scripts/emscripten/test
    - uses: actions/upload-artifact@master
      with:
        name: cbl emscripten (PTHREADS=${{matrix.with_pthreads}})
        path: |
          build/bin/cbl-${{matrix.suffix}}.js
          build/bin/cbl-${{matrix.suffix}}.wasm
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: "ubuntu-20.04"
            script_dir: "ubuntu20"
          - os: "ubuntu-18.04"
            script_dir: "ubuntu18"
    runs-on: ${{matrix.os}}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup
      run: |
        sudo bash scripts/${{matrix.script_dir}}/install_packages
        bash scripts/${{matrix.script_dir}}/install_rust
    - name: Configure
      run: bash scripts/${{matrix.script_dir}}/configure
    - name: Build
      run: bash scripts/${{matrix.script_dir}}/build
    - name: Test
      run: bash scripts/${{matrix.script_dir}}/test
    - uses: actions/upload-artifact@master
      with:
        name: cbl ${{matrix.os}}
        path: |
          build/bin/cbl
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: ["Debug", "Release"]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        release: false
        path-type: inherit
    - name: Setup
      env:
        RUSTUP_USE_CURL: 1
      run: |
        msys2 scripts/windows/install_packages
        msys2 scripts/windows/install_rust
    - name: Build
      env:
        RUST_BACKTRACE: 1
        CMAKE_BUILD_TYPE: ${{ matrix.build-type }}
      run: |
        msys2 scripts/windows/configure ${{ matrix.build-type }}
        msys2 scripts/windows/build
    - name: Test
      run: |
        msys2 scripts/windows/test
    - uses: actions/upload-artifact@master
      with:
        name: cbl win64 ${{ matrix.build-type }}
        path: build/bin/cbl.exe
