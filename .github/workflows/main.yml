name: CI

on:
  push:
    branches:
      - devel
  pull_request:
  workflow_dispatch:

jobs:
  Windows:
    runs-on: windows-latest
    strategy:
      matrix:
        build-type: ["Release"]
        bitness: [32bits, 64bits]
        include:
          - bitness: 32bits
            msystem: MINGW32
            arch: i686
            artifact: cbl-win32
          - bitness: 64bits
            msystem: MINGW64
            arch: x86_64
            artifact: cbl-win64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Set up rust
        env:
          RUSTUP_USE_CURL: 1
        run: |
          rustup update
          rustup default stable-${{ matrix.arch }}-pc-windows-gnu
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
          install: >-
            base-devel
            mingw-w64-${{ matrix.arch }}-toolchain
            mingw-w64-${{ matrix.arch }}-cmake
            mingw-w64-${{ matrix.arch }}-boost
            mingw-w64-${{ matrix.arch }}-ninja
            mingw-w64-${{ matrix.arch }}-clang
            mingw-w64-${{ matrix.arch }}-lld
            wget
      - name: Build libtrace (64bits)
        if: ${{ matrix.bitness == '64bits' }}
        shell: msys2 {0}
        run: |
          cd deps/libbacktrace
          mkdir build
          ./configure --prefix=`pwd`/build
          make && make install
      - name: Build
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          mkdir build
          cd build
          cmake -G Ninja -DCMAKE_CXX_FLAGS="-g" -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DUSE_LIBBACKTRACE=${{ matrix.bitness == '64bits' }} -DSKIP_RUST_BINDGEN=${{ matrix.bitness == '32bits' }} ..
          ninja cbl
      - name: Test runtime (Debug)
        if: ${{ matrix.build-type == 'Debug' }}
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          ninja test_runtime
          ./test_runtime
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact }} ${{ matrix.build-type }}
          path: build/cbl.exe
          if-no-files-found: error

  #
  # Test chainblocks for Windows
  #
  Windows-test:
    needs: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: ["Release"]
        bitness: [32bits, 64bits]
        include:
          - bitness: 32bits
            msystem: MINGW32
            arch: i686
            artifact: cbl-win32
          - bitness: 64bits
            msystem: MINGW64
            arch: x86_64
            artifact: cbl-win64
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 1
          submodules: recursive
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ matrix.artifact }} ${{ matrix.build-type }}
          path: build
      - name: Set up MSYS2 (Release)
        if: ${{ matrix.build-type == 'Release' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
      - name: Set up MSYS2 (Debug)
        if: ${{ matrix.build-type == 'Debug' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.msystem }}
          release: false
          path-type: inherit
          install: >-
            mingw-w64-${{ matrix.arch }}-boost
      - name: Test
        env:
          RUST_BACKTRACE: 1
        shell: msys2 {0}
        run: |
          cd build
          echo "Running test: subchains"
          gdb -batch -ex 'run ../src/tests/subchains.clj' -ex bt -ex quit ./cbl.exe
          echo "Running test: flows"
          gdb -batch -ex 'run ../src/tests/flows.clj' -ex bt -ex quit ./cbl.exe
          